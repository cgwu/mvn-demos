Windows下面 Console 2终端工具:
https://sourceforge.net/projects/console/files/console-devel/2.00/

查看插件的帮助
mvn help:describe -Dplugin=help
mvn help:describe -Dplugin=help -Dfull

Create a new projects
mvn archetype:generate
mvn compile
mvn test

three inbuilt build lifecycles: default, clean, and site.
Default lifecycle
The default lifecycle handles the project compilation, test, and deployment. While it contains
over 20 build phases, the following are the most important phases:
    Validate: validates that all project information is available and is correct
    Compile: compiles the source code
    Test: runs unit tests within a suitable framework
    Package: packages the compiled code in its distribution format
    Integration-test: processes the package in the integration-test environment
    Verify: runs checks to verify that the package is valid
    Install: installs the package in the local repository
    Deploy: installs the final package in a remote repository

Clean lifecycle
The clean lifecycle handles the project cleaning and contains the following build phases:
    Pre-clean: executes processes required before project cleaning
    Clean: removes all files generated by previous builds
    Post-clean: executes processes required to finalize project cleaning

Site lifecycle
The site lifecycle handles the generation and deployment of the project’s site documentation:
    Pre-site: executes processes required before generation of the site
    Site: generates the project’s site documentation Basics of Apache Maven
    Post-site: executes processes required to finalize the site generation and prepares the site for deployment
    Site-deploy: deploys the site documentation to the specified web server

Build profiles are specifications made in the POM and can be triggered as and when required.
Some ways to trigger profiles are:
Profiles can be directly triggered through the command line using the -P option. The list of
profiles, separated by commas, that are to be activated should be mentioned after the -P flag:
mvn install -P profile-1,profile-2
	
跳过测试
跳过test且不编绎test case
mvn package -Dmaven.test.skip=true
跳过test但编绎test case
mvn package -DskipTests



mvn archetype:generate -DgroupId=net.srirangan.packt.maven -DartifactId=MySampleApp
mvn archetype:generate -DarchetypeArtifactId=maven-archetype-quickstart -DgroupId=net.srirangan.packt.maven -DartifactId=MyModuleJar
mvn archetype:generate -DarchetypeArtifactId=maven-archetype-webapp -DgroupId=net.srirangan.packt.maven -DartifactId=MyModuleWar

安装到本地.m2/repository
mvn clean install

Maven dependencies have six possible scopes:
    Compile: This is the default scope. Compile dependencies are available in the classpaths.
    Provided: This scope assumes that the JDK or the environment provides dependencies at runtime.
    Runtime: Dependencies that are required at runtime and are specified in the runtime classpaths.
    Test: Dependencies required for test compilation and execution.
    System: Dependency is always available, but the JAR is provided nonetheless.
	Import: Imports dependencies specified in POM included via the <dependencyManagement/> element.

$ mvn dependency:resolve
Resolves all dependencies

$ mvn dependency:tree
Displays dependency trees




